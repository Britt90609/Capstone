# Generated by Django 3.0.5 on 2020-04-25 05:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('genomics', '0002_auto_20191107_0225'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancerHasGenes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Cancer_has_Genes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancerHasMedications',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('medication_id', models.IntegerField(db_column='Medication_ID')),
                ('cancer_id', models.IntegerField(db_column='Cancer_ID')),
            ],
            options={
                'db_table': 'Cancer_has_Medications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cancers',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, db_column='TYPE', max_length=255, null=True)),
                ('primary_site', models.CharField(blank=True, db_column='PRIMARY_SITE', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Cancers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('is_cancer_gene', models.CharField(blank=True, db_column='IS_CANCER_GENE', max_length=45, null=True)),
                ('symbol', models.CharField(blank=True, db_column='SYMBOL', max_length=255, null=True)),
                ('bio_type', models.CharField(blank=True, db_column='BIO_TYPE', max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=255, null=True)),
                ('cytoband', models.CharField(blank=True, db_column='CYTOBAND', max_length=255, null=True)),
                ('genotype', models.CharField(blank=True, db_column='GENOTYPE', max_length=255, null=True)),
                ('phenotype', models.TextField(blank=True, db_column='PHENOTYPE', null=True)),
            ],
            options={
                'db_table': 'Genes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenomicsUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('my_like', models.IntegerField()),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'genomics_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medications',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dosage', models.CharField(blank=True, db_column='DOSAGE', max_length=255, null=True)),
                ('method', models.CharField(blank=True, db_column='METHOD', max_length=255, null=True)),
                ('indication', models.TextField(blank=True, db_column='INDICATION', null=True)),
                ('contraindication', models.TextField(blank=True, db_column='CONTRAINDICATION', null=True)),
                ('side_effects', models.TextField(blank=True, db_column='SIDE_EFFECTS', null=True)),
                ('generic_name', models.CharField(blank=True, db_column='GENERIC_NAME', max_length=255, null=True)),
                ('brand_name', models.CharField(blank=True, db_column='BRAND_NAME', max_length=255, null=True)),
                ('route', models.CharField(blank=True, db_column='ROUTE', max_length=255, null=True)),
                ('iupac', models.TextField(blank=True, db_column='IUPAC', null=True)),
                ('mechanism', models.TextField(blank=True, db_column='MECHANISM', null=True)),
                ('type', models.CharField(blank=True, db_column='TYPE', max_length=45, null=True)),
                ('treatment_type', models.CharField(blank=True, db_column='TREATMENT_TYPE', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Medications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicationsHasGenes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Medications_has_Genes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pathways',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=255, null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
            ],
            options={
                'db_table': 'Pathways',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, db_column='GENDER', max_length=45, null=True)),
                ('age', models.CharField(blank=True, db_column='AGE', max_length=25, null=True)),
                ('vital_status', models.CharField(blank=True, db_column='VITAL_STATUS', max_length=255, null=True)),
                ('height', models.CharField(blank=True, db_column='HEIGHT', max_length=5, null=True)),
                ('weight', models.CharField(blank=True, db_column='WEIGHT', max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, db_column='FIRST_NAME', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LAST_NAME', max_length=255, null=True)),
                ('stage', models.CharField(blank=True, db_column='STAGE', max_length=1, null=True)),
                ('symptoms', models.TextField(blank=True, db_column='SYMPTOMS', null=True)),
                ('tests', models.TextField(blank=True, db_column='TESTS', null=True)),
            ],
            options={
                'db_table': 'Patients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientsHasCancer',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Patients_has_Cancer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PatientsHasGenes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sequence', models.TextField(blank=True, db_column='SEQUENCE', null=True)),
                ('isvariant', models.IntegerField(blank=True, db_column='ISVARIANT', null=True)),
            ],
            options={
                'db_table': 'Patients_has_Genes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Variants',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sequence', models.TextField(blank=True, db_column='SEQUENCE', null=True)),
            ],
            options={
                'db_table': 'Variants',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Users',
        ),
        migrations.CreateModel(
            name='PatientsHasMedication',
            fields=[
                ('patient', models.OneToOneField(db_column='Patient_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='genomics.Patients')),
            ],
            options={
                'db_table': 'Patients_has_Medication',
                'managed': False,
            },
        ),
    ]
